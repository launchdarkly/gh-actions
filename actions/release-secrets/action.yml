name: Release Secrets
# Currently this handles SSM, but once we need an s3 secret we should add support.
description: 'Action for getting release secrets from SSM'
inputs:
  aws_assume_role:
    description: 'The ARN of an AWS IAM role to assume. Used to auth with AWS to upload results to S3.'
    required: true
  # This uses this format to allow using the GetParameters action.
  ssm_parameter_pairs:
    description: 'A series of pairs of paths to environment mappings. "/path = ENV_NAME, /path2 = ENV_NAME2"'
    required: false
  # If we add S3, then just have a list of S3 paths.
  s3_path_pairs:
    description: 'A series of pairs of s3 paths to local paths. The local paths are relative to the project root. "launchdarkly-releaser/dotnet/LaunchDarkly.ClientSdk.snk = LaunchDarkly.ClientSdk.snk"'
    required: false 

runs:
  using: composite
  steps:
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1-node16
      with:
        audience: https://github.com/launchdarkly
        role-to-assume: ${{ inputs.aws_assume_role }}
        aws-region: us-east-1
    - name: Load environment variables
      uses: dkershner6/aws-ssm-getparameters-action@0fbd3a271ba44a5aa6a035c7746ffe4cf4eb04fe
      if: ${{ inputs.ssm_parameter_pairs != '' }}
      with:
        parameterPairs: ${{ inputs.ssm_parameter_pairs }}
        withDecryption: 'true'
    - name: Download S3 files
      shell: bash
      if: ${{ inputs.s3_path_pairs != '' }}
      env:
        PATH_PAIRS: ${{ inputs.s3_path_pairs }}
      run: |
        # Used sed to remove potential whitespace around the '=' in the pairs.
        # Then split the string based on ',' to get an array of pairs.
        IFS=',' read -ra pairs <<< $(echo "${PATH_PAIRS}" | sed 's/[[:space:]]*=[[:space:]]*/=/g')

        for pair in "${pairs[@]}"; do
          # Split each pair using '=' as the delimiter
          IFS='=' read -r path value <<< "${pair}"

          aws s3 cp s3://"${path}" "${value}"
        done
